import telebot
from input_testing import letters_transform

bot = telebot.TeleBot('5704603308:AAHVM2f5_BGKg94-jbQbKxZX9rSVk2LeYyo')  # https://t.me/TranslitRUENbot

"""
Required python packages: telebot, pyTelegramBotAPI
"""


@bot.message_handler(content_types=['text'])
def command_handling(message):
    print(f'User {message.from_user.id}: {message.text}')
    if message.text == "/start":
        # send greetings
        bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, —è –ø–µ—Ä–µ–¥–µ–ª—ã–≤–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¥—Ä—É–≥—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É. "
                                               "–ù–∞–ø–∏—à–∏ /help –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É –ø–æ–ø–æ–¥—Ä–æ–±–Ω–µ–µ")
        # log the message to python console
        print(f'Answer to {message.from_user.id}: –ü—Ä–∏–≤–µ—Ç, —è –ø–µ—Ä–µ–¥–µ–ª—ã–≤–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¥—Ä—É–≥—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É. '
              f'–ù–∞–ø–∏—à–∏ /help –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É –ø–æ–ø–æ–¥—Ä–æ–±–Ω–µ–µ')

    elif message.text == "/help":
        # show bot description
        bot.send_message(message.from_user.id, "–ü—Ä–∏—Å—ã–ª–∞–π –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á—Ç–æ–±—ã —è –µ–≥–æ –ø–µ—Ä–µ–¥–µ–ª–∞–ª –≤ –¥—Ä—É–≥—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É\n"
                         "–ù–æ —Å–Ω–∞—á–∞–ª–∞ —É—Ç–æ—á–Ω–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω—É–∂–Ω–æ –∏–∑ —Ä—É—Å—Å–∫–æ–π –≤ –∞–Ω–≥–ª–∏–π—Å–∫—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É /en –∏–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç /ru ?")
        # log the message to python console
        print(f'Answer to {message.from_user.id}: –ü—Ä–∏—Å—ã–ª–∞–π –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á—Ç–æ–±—ã —è –µ–≥–æ –ø–µ—Ä–µ–¥–µ–ª–∞–ª –≤ –¥—Ä—É–≥—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É\n'
              f'–ù–æ —Å–Ω–∞—á–∞–ª–∞ —É—Ç–æ—á–Ω–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω—É–∂–Ω–æ –∏–∑ —Ä—É—Å—Å–∫–æ–π –≤ –∞–Ω–≥–ª–∏–π—Å–∫—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É /en –∏–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç /ru ?')

    elif message.text == '/ru':
        bot.register_next_step_handler(message=bot.reply_to(message, '–ö–∏–¥–∞–π —Ç–µ–∫—Å—Ç –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–π —Ä–∞—Å–∫–ª–∞–¥–∫–µ!'),
                                       callback=lang_ru)
        print(f'Answer to {message.from_user.id}: –ö–∏–¥–∞–π —Ç–µ–∫—Å—Ç –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–π —Ä–∞—Å–∫–ª–∞–¥–∫–µ!')

    elif message.text == '/en':
        bot.register_next_step_handler(message=bot.reply_to(message, '–ö–∏–¥–∞–π —Ç–µ–∫—Å—Ç –≤ —Ä—É—Å—Å–∫–æ–π —Ä–∞—Å–∫–ª–∞–¥–∫–µ!'),
                                       callback=lang_en)
        print(f'Answer to {message.from_user.id}: –ö–∏–¥–∞–π —Ç–µ–∫—Å—Ç –≤ —Ä—É—Å—Å–∫–æ–π —Ä–∞—Å–∫–ª–∞–¥–∫–µ!')

    elif message.text == '/halloween':
        bot.send_message(message.from_user.id, 'üëª')
        bot.send_message(message.from_user.id, '–ë—É–≥–∞–≥–∞—à–µ–Ω—å–∫–∞')
        print(f'Answer to {message.from_user.id}: üëª –ë—É–≥–∞–≥–∞—à–µ–Ω—å–∫–∞')

    else:
        bot.send_message(message.from_user.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É:\n/ru –†—É—Å—Å–∫–∞—è\n/en –ê–Ω–≥–ª–∏–π—Å–∫–∞—è')
        print(f'Answer to {message.from_user.id}: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É:\n'
              f'/ru –†—É—Å—Å–∫–∞—è\n/en –ê–Ω–≥–ª–∏–π—Å–∫–∞—è')


def lang_ru(message):
    # reply with the changed text
    bot.send_message(message.from_user.id, letters_transform(user_input=message.text, lang='ru'))
    # log the message to python console
    print(f"Answer to {message.from_user.id}: {letters_transform(user_input=message.text, lang='ru')}")


def lang_en(message):
    # reply with the changed text
    bot.send_message(message.from_user.id, letters_transform(user_input=message.text, lang='en'))
    # log the message to python console
    print(f"Answer to {message.from_user.id}: {letters_transform(user_input=message.text, lang='en')}")


bot.enable_save_next_step_handlers(delay=1)
bot.load_next_step_handlers()

bot.polling(none_stop=True, interval=1)
